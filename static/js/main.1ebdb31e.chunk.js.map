{"version":3,"sources":["components/Form.js","components/FilterButton.js","usePrevious.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","disabled","FilterButton","ispressed","onClick","setFilter","usePrevious","ref","useRef","useEffect","current","Todo","isEditing","setEditing","wasEditing","newName","setNewName","editFieldRef","editButtonRef","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","App","tasks","setTasks","filter","listHeadingRef","FILTER_MAP","All","Active","task","FILTER_NAMES","Object","keys","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","isPressed","tasksNoun","length","headingText","prevTaskLength","newTask","nanoid","tabIndex","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ebdb31e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n    const [name, setName] = useState('');\n\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.addTask(name);\n        setName(\"\");\n    } \n\n    return (\n        <form onSubmit={handleSubmit} >\n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n            What needs to be done?\n          </label>\n        </h2>\n        <input\n          type=\"text\"\n          id=\"new-todo-input\"\n          className=\"input input__lg\"\n          name=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\" disabled={!name}>\n          Add\n        </button>\n      </form>\n\n    );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction FilterButton(props) {\n    return(\n        <button \n        type=\"button\" \n        className=\"btn toggle-btn\" \n        aria-pressed={props.ispressed}\n        onClick={() => props.setFilter(props.name)}\n        >\n          <span className=\"visually-hidden\">Show </span>\n          <span>{props.name}</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n    );\n}\n\n\nexport default FilterButton;","// eslint-disable-next-line no-unused-vars\nimport React, { useRef, useEffect } from \"react\";\n\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n        \n      \n\nexport default usePrevious;","import React, { useEffect, useRef, useState } from \"react\";\nimport usePrevious from \"../usePrevious\"\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] =useState(false);\n  const wasEditing = usePrevious(isEditing);\n  const [newName, setNewName] = useState('');\n    const editFieldRef = useRef(null);\n    const editButtonRef = useRef(null);\n\n    function handleChange(e) {\n        setNewName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.editTask(props.id, newName);\n        setNewName(\"\");\n        setEditing(false);\n    }\n\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label className=\"todo-label\" htmlFor={props.id}>\n              New name for {props.name}\n            </label>\n            <input \n            id={props.id} \n            className=\"todo-text\" \n            type=\"text\"\n            value={newName}\n            onChange={handleChange} \n            ref={editFieldRef}\n            />\n\n          </div>\n          <div className=\"btn-group\">\n          <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n              Save\n              <span className=\"visually-hidden\">new name for {props.name}</span>\n            </button>\n          </div>\n        </form>\n      );\n      const viewTemplate = (\n        <div className=\"stack-small\">\n            <div className=\"c-cb\">\n              <input\n                id={props.id}\n                type=\"checkbox\"\n                defaultChecked={props.completed}\n                onChange={() => props.toggleTaskCompleted(props.id)}\n              />\n              <label className=\"todo-label\" htmlFor={props.id}>\n                {props.name}\n              </label>\n            </div>\n            <div className=\"btn-group\">\n                <button \n                type=\"button\" \n                className=\"btn\" \n                onClick={() => setEditing(true)}\n                ref={editButtonRef}\n                >\n                    Edit <span className=\"visually-hidden\">{props.name}</span>\n                </button>\n              <button\n                type=\"button\"\n                className=\"btn btn__danger\"\n                onClick={() => props.deleteTask(props.id)}\n              >\n                Delete <span className=\"visually-hidden\">{props.name}</span>\n              </button>\n            </div>\n        </div>\n      );\n      \n      useEffect(() => {\n        if (!wasEditing && isEditing) {\n          editFieldRef.current.focus();\n        } \n        if (wasEditing && !isEditing) {\n          editButtonRef.current.focus();\n        }\n      }, [wasEditing, isEditing]);\n\n    return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport usePrevious from \"./usePrevious\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const listHeadingRef = useRef(null);\n  const FILTER_MAP = {\n    All: () => true,\n    Active: task => !task.completed,\n    completed: task => task.completed\n  };\n\n  function addTask(name){\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object \n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks)\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton \n    key={name} \n    name={name}\n    isPressed={name === filter}\n    setFilter={setFilter} \n    />\n  ));\n\nconst tasksNoun = taskList.length !==1 ? 'tasks' : 'task';\nconst headingText = `${taskList.length} ${tasksNoun} remainig`;\nconst prevTaskLength = usePrevious(tasks.length);\n\nuseEffect(() => {\n  if (tasks.length - prevTaskLength === -1) {\n    listHeadingRef.current.focus();\n  }\n}, [tasks.length, prevTaskLength]);\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <div\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n      {taskList}\n \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n// console.log(DATA)\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}